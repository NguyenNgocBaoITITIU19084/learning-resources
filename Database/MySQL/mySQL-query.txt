*****==========================MYSQL QUERY=============================*****
	- SELECT set of column form a table
	- When using the SELECT statement mySQL executing the FORM statement before the SELECT statement
	- SELECT statement does not require the FORM clause
	- Assign an alias to a column to make it more readable
		SYNTAX: 
			SELECT select_list
			FROM table_name;
		
			SELECT 1 + 1 as total;
			
	* ORDER BY CLAUSE
	- To sort the result from the SELECT clause using the ORDER BY
	- ASC standard for ascending 
	- DESC standard for descending
	- By default the ORDER BY using the ASC if you do not specify any option
	- MySQL will execute the FROM -> SELECT -> ORDER BY clause.
	- Result will sort by solumn1 first, then it will sort by column2 base on sorted result of column1
		SYNTAX:
			SELECT select_list
			FROM table_name
			ORDER BY 
			column1 [ASC|DESC], 
			column2 [ASC|DESC],
			...;
		EXAMPLE:
			SELECT 
				orderNumber, 
				orderLineNumber, 
				quantityOrdered * priceEach AS subtotal 
			FROM 
				orderdetails 
			ORDER BY 
				subtotal DESC;
		* Using the MySQL ORDER BY clause to sort data using a custom list
	- The FIELD() function return the index (position) of a value within a list of values
	- The value for which you wanto find the position
	- The value1, value2 is the list of values against which you want compare specific field
	- In ORDER CLAUSE, the NULL value is lower than non-NULL value
		SYNTAX:
			FIELD(value, value1, value2,...)
		EXAMPLE:
			SELECT 
				orderNumber, 
				status 
			FROM orders 
			ORDER BY 
			FIELD(
				status, 
				'In Process', 
				'On Hold', 
				'Cancelled', 
				'Resolved', 
				'Disputed', 
				'Shipped'
			);
	* WHERE CLAUSE:
		- Where clause allow you specify search_condition for SELECT, UPDATE, DELETE clause
		- Search_condition is a combination of one or more expressions using the logical operator AND, OR, NOT
		- MYSQL will execute FROM -> WHERE -> SELECT -> ORDER BY
			SYNTAX:
				SELECT select_list
				FROM table_name
				WHERE search_condition;
			EXAMPLE:
				Select firstName, lastName, officeCode, jobTitle 
				From employees where jobTitle = 'VP Sales' 
				AND 
				officeCode BETWEEN 1 AND 3 
				ORDER BY officeCode
		* Using with comparision operator:
			- Equal to OP, can use with almost datatype = 
			- Not equal to <> or !=
			- Less than <
			- Greater than >
			- Less than or equal <=
			- Greater than or equal >=
	
	* SELECT DISTINCT
		- when you querying data from a table, you may get duplicate rows. To remove duplicate rows
using the SELECT DISTINCT
		- If you specify DISTINCT for the column contains Null-value, DISTINCT will keep only one 
Null-value. Because it consider that all null value are the same
		- MySQL execute FROM -> WHERE -> SELECT -> DISTINCT -> ORDER BY
		SYNTAX:
			SELECT DISTINCT
				select_list
			FROM 
				table_name
			WHERE 
				search_condition
			ORDER BY 
				sort_expression;
		EXAMPLE:
			SELECT DISTINCT
				state, city
			FROM
				customers
			WHERE
				state IS NOT NULL
			ORDER BY 
				state, 
				city;
	* AND OPERATOR:
	- The AND operator is as logical operator that combines two or more Boolean expressions 
as returns 0,1,null.
	- The AND operator have higher precedence than OR operator
	- The AND operator is short-circuit evaluation. When evaluation an expression that contain the AND
operator, MYSQL will stop evaluating the remaining parts of the expression as soon as it can.
	SELECT 1 = 0 AND 1 / 0;
					TRUE	FALSE	NULL
			TRUE	TRUE	FALSE	NULL
			FALSE	FALSE	FALSE	FALSE
			NULL	NULL	FALSE	NULL

	EXAMPLE:
		SELECT 
			customername, 
			country, 
			state, 
			creditlimit
		FROM
			customers
		WHERE
			country = 'USA' AND 
			state = 'CA' AND 
			creditlimit > 100000;
			
	* OR operator:
		- OR operator is also short-circuited. ex: SELECT 1 = 1 OR 1 / 0;
		- To change precedence of OR operator using the parentheses SELECT (1 OR 0) AND 0;
				TRUE	FALSE	NULL
		TRUE	TRUE	TRUE	TRUE
		FALSE	TRUE	FALSE	NULL
		NULL	TRUE	NULL	NULL
			Example: 
			SELECT   
				customername, 
				country, 
				creditLimit
			FROM   
				customers
			WHERE(country = 'USA'
			OR country = 'France')
			AND creditlimit > 100000;
	* IN operator:
		- The IN operator allow you to determine if the value matches any value in a list of values4
		- return 1 if matches, 0 if not
			SYNTAX:
				value IN (value1, value2, ...)
			EXAMPLE:
				SELECT 1 IN (1,2,3);
		* IN operator and NULL value:
			- The IN operator return null value in 2 case:
				+ The value in left hand side is null 
				+ The value does not equal any value in the list and exists one null value in the list
			EXAMPLE:
				SELECT NULL IN (1,2,3);
				SELECT 0 IN (1,2,3,NULL);
			
				SELECT 
					officeCode, 
					city, 
					phone, 
					country
				FROM
					offices
				WHERE
					country IN ('USA' , 'France'); | contry = 'USA' OR country = 'France'
		
	* NOT IN OPERATOR:
		- return 1 if value does not match any value in list. Otherwise, return 0
		- return NULL if the value on the left handside is NULL
		SYNTAX:
			value NOT IN (value1, value2, value2)
		EXAMPLE:
			SELECT 1 NOT IN (1,2,3);
			SELECT 0 NOT IN (1,2,3);
			SELECT NULL NOT IN (1,2,3);
			
	* BETWEEN OPERATOR:
		- The BETWEEN operator is logical operator that specific the value in range or not.
		- The value of the value, low, high is null, the operator will return null
		
			SYNTAX:
				value BETWEEN low AND high;
				SELECT 15 NOT BETWEEN 10 AND 20;
			EXAMPLE:
				select * 
				from products 
				where buyPrice between 1 and 5000 and 
				productScale = '1:10' and 
				productLine in ('Classic Cars');
		* Using BETWEEN OPERATOR WITH DATE TYPE:
			EXAMPLE:
				SELECT 
					orderNumber,
					requiredDate,
					status
				FROM 
					orders
				WHERE 
					requireddate BETWEEN 
					CAST('2003-01-01' AS DATE) AND 
					CAST('2003-01-31' AS DATE);
					
	* LIKE OPERATOR:
		- The LIKE operator is a logical operator that tests whether a string contains a specified pattern
or not 
		- MySQL provides two wildcard characters: percentaged (%) and underscore(_)
		- One underscore contains one character
		- s% matches any string with the character such as sun and six
		- se_ matches any string with the character sea and see
		SYNTAX:
		expression LIKE pattern ESCAPE escape_character;
		EXAMPLE:
			SELECT 
				employeeNumber, 
				lastName, 
				firstName
			FROM
				employees
			WHERE
				firstname LIKE 'T_m'; | lastname LIKE '%on%'; |  lastName NOT LIKE 'B%';
		* LIKE OPERATOR WITH ESCAPE CLAUSE:
		- Using the escapse to specific underscore(_) and percentage as the character such as '20%' or '_20'
			SYNTAX: 
				SELECT 
					productCode, 
					productName
				FROM
					products
				WHERE
					productCode LIKE '%\_20%';
					
	* LIMIT OPERATOR:
		- Limit the result return from the query
		- Always using the ORDER BY clause
		- The Offset is numbers of rows is skipped(first row is 0)
		- Rowcount is numbers of rows is return from the query
		- mysql execute by order from -> where -> distinct -> select -> order by -> limit
		SYNTAX:
			SELECT 
				select_list
			FROM
				table_name
			LIMIT [offset,] row_count;
		EXAMPLE:
			SELECT 
				customerNumber, 
				customerName, 
				creditLimit
			FROM
				customers
			ORDER BY 
				creditLimit, 
				customerNumber
			LIMIT 5;
		* LIMIT clause for PAGINATION:
		- To calculate offset, take total rows divide by the limit of row each page 
		EXAMPLE take 10 rows skip 10 first rows:
			SELECT 
				customerNumber, 
				customerName
			FROM
				customers
			ORDER BY customerName    
			LIMIT 10, 10;
		* LIMIT OPERATOR to get the nth highest or lowest value
			SYNTAX: 
				SELECT select_list
				FROM table_name
				ORDER BY sort_expression
				LIMIT n-1, 1;